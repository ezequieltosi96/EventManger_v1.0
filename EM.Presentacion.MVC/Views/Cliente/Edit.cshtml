@model EM.Presentacion.MVC.Models.Cliente.ClienteViewModel
@{
    ViewData["Title"] = "Editar Cliente";
    Layout = "_LayoutAdmin";
}

<h1 class="text-center">@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4 col-md-offset-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger">@ViewData["Error"]</div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="Email" />
            <div class="form-group">
                <label asp-for="Apellido" class="control-label"></label>
                <input asp-for="Apellido" class="form-control" />
                <span asp-validation-for="Apellido" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Dni" class="control-label"></label>
                <input asp-for="Dni" class="form-control" />
                <span asp-validation-for="Dni" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Editar" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>

<div>
    <a class="btn btn-default" asp-action="Index"><span class="glyphicon glyphicon-menu-left"></span>Volver a la lista</a>
</div>

@section Scripts
{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}
